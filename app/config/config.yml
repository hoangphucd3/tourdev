imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: vi
    sonata.user.admin.user.class: AppBundle\Admin\UserAdmin

framework:
    #esi:             ~
    translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    form:
        resources:
            - 'SonataMediaBundle:Form:media_widgets.html.twig'
            - 'SonataCoreBundle:Form:datepicker.html.twig'

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"
        types:
            json: Sonata\Doctrine\Types\JsonType

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
#        naming_strategy: doctrine.orm.naming_strategy.underscore
        default_entity_manager: default
        entity_managers:
            default:
                auto_mapping: true
                mappings:
                    FOSUserBundle: ~
                    ApplicationSonataClassificationBundle: ~
                    ApplicationSonataMediaBundle: ~
                    SonataMediaBundle: ~
                    SonataClassificationBundle: ~
                    SonataUserBundle: ~
                dql:
                    datetime_functions:
                        date_format: DoctrineExtensions\Query\Mysql\DateFormat
                        day: DoctrineExtensions\Query\Mysql\Day
                        month: DoctrineExtensions\Query\Mysql\Month
                        year: DoctrineExtensions\Query\Mysql\Year

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

sensio_framework_extra:
    view:    { annotations: false }
    router:  { annotations: true }
    request: { converters:  true }

fos_elastica:
    clients:
        default: { host: localhost, port: 9200 }
    indexes:
        app:
            client: default
            types:
                tour:
                    mappings:
                        tourName:
                            type: string
                        description:
                            type: text
                        regularPrice: ~
                        startDate:
                            type: date
                        locations:
                            type: nested
                            properties:
                                locationId: ~
                                location: ~
                        services:
                            type: nested
                            properties:
                                serviceId: ~
                                service: ~
                    persistence:
                        driver: orm
                        model: AppBundle\Entity\Tour
                        provider: ~
                        listener: ~
                        finder: ~
                        repository: AppBundle\SearchRepository\TourRepository

sonata_admin:
    title: Travel Admin
    title_logo: /assets/frontend/images/cs-footer-logo.png
    templates:
        layout: Admin/standard_layout.html.twig
    dashboard:
        blocks:
            -
                class: col-lg-3 col-xs-6
                position: top
                type: sonata.admin.block.stats
                settings:
                    code: app.admin.tour
                    icon: fa-map-marker
                    text: Tour
                    color: bg-green
            -
                class: col-lg-3 col-xs-6
                position: top
                type: sonata.admin.block.stats
                settings:
                    code: app.admin.tour_order
                    icon: fa-shopping-cart
                    text: Đơn đặt tour mới
                    filters:
                        status: { value: pending }
            -
                class: col-lg-3 col-xs-6
                position: top
                type: sonata.admin.block.stats
                settings:
                    code: app.admin.customer
                    icon: fa-users
                    text: Khách hàng
                    color: bg-yellow
            -
                class: col-lg-3 col-xs-6
                position: top
                type: sonata.admin.block.stats
                settings:
                    code: app.admin.tour_cancel
                    icon: fa-ban
                    text: Đơn hủy tour mới
                    color: bg-red
                    filters:
                        status: { value: pending }
            - { position: left, type: sonata.admin.block.admin_list }

    security:
        handler: sonata.admin.security.handler.role

        # acl security information
#        information:
#            GUEST:    [VIEW, LIST]
#            STAFF:    [EDIT, LIST, CREATE]
#            EDITOR:   [OPERATOR, EXPORT]
#            ADMIN:    [MASTER]
#
#        # permissions not related to an object instance and also to be available when objects do not exist
#        # the DELETE admin permission means the user is allowed to batch delete objects
#        admin_permissions: [CREATE, LIST, DELETE, UNDELETE, EXPORT, OPERATOR, MASTER]
#
#        # permission related to the objects
#        object_permissions: [VIEW, EDIT, DELETE, UNDELETE, OPERATOR, MASTER, OWNER]

sonata_block:
    default_contexts: [cms]
    blocks:
        sonata.admin.block.stats:
            contexts:   [admin]
        # enable the SonataAdminBundle block
        sonata.admin.block.admin_list:
            contexts: [admin]
        # ...
        sonata.block.service.text:
        sonata.media.block.media:
        sonata.user.block.menu:    # used to display the menu in profile pages
        sonata.user.block.account: # used to display menu option (login option)
        sonata.block.service.text: # used to if you plan to use Sonata user routes
        app.block.recent_user_comment:
        app.block.user_orders:
        app.block.test_block:
            contexts: [admin]

sonata_user:
    security_acl: false
    table:
        user_group: fos_user_user_group
    manager_type: orm # can be orm or mongodb
    class:
        user: AppBundle\Entity\User
    profile:
        # Profile show page is a dashboard as in SonataAdminBundle
        dashboard:
            blocks:
                - { type: app.block.recent_user_comment }
                - { type: app.block.user_orders }
        # Customize user portal menu by setting links
        menu:
            - { route: 'sonata_user_profile_show', label: 'sonata_profile_title', domain: 'SonataUserBundle'}
            - { route: 'sonata_user_profile_edit', label: 'link_edit_profile', domain: 'SonataUserBundle'}
            - { route: 'sonata_user_profile_edit_authentication', label: 'link_edit_authentication', domain: 'SonataUserBundle'}
            - { route: 'sonata_user_change_password', label: 'sonata_change_password_link', domain: 'SonataUserBundle' }
            - { route: 'profile_tour_orders', label: 'Tour của bạn' }

fos_user:
    db_driver:      orm # can be orm or odm
    firewall_name:  main
    user_class:     AppBundle\Entity\User


    group:
        group_class:   Application\Sonata\UserBundle\Entity\Group
        group_manager: sonata.user.orm.group_manager

    service:
        user_manager: sonata.user.orm.user_manager

sonata_media:
    # if you don't use default namespace configuration
    #class:
    #    media: MyVendor\MediaBundle\Entity\Media
    #    gallery: MyVendor\MediaBundle\Entity\Gallery
    #    gallery_has_media: MyVendor\MediaBundle\Entity\GalleryHasMedia
    db_driver: doctrine_orm # or doctrine_mongodb, doctrine_phpcr it is mandatory to choose one here
    default_context: default # you need to set a context
    contexts:
        default:  # the default context is mandatory
            providers:
                - sonata.media.provider.dailymotion
                - sonata.media.provider.youtube
                - sonata.media.provider.image
                - sonata.media.provider.file
                - sonata.media.provider.vimeo

            formats:
                small: { width: 100 , quality: 70}
                big:   { width: 500 , quality: 70}

    cdn:
        server:
            path: /uploads/media # http://media.sonata-project.org/

    filesystem:
        local:
            directory:  "%kernel.root_dir%/../web/uploads/media"
            create:     false

ivory_ck_editor:
    default_config: default
    configs:
        cmf_content: { toolbar: standard }
        default:
            # default toolbar plus Format button
            toolbar: standard
#            - [Bold, Italic, Underline, -, Cut, Copy, Paste, PasteText, PasteFromWord, -, Undo, Redo, -, NumberedList, BulletedList, -, Outdent, Indent, -, Blockquote, -, Image, Link, Unlink, Table]
#            - [Format, Maximize, Source]

            filebrowserBrowseRoute: admin_sonata_media_media_browser
            filebrowserImageBrowseRoute: admin_sonata_media_media_browser
            # Display images by default when clicking the image dialog browse button
            filebrowserImageBrowseRouteParameters:
                provider: sonata.media.provider.image
            filebrowserUploadRoute: admin_sonata_media_media_upload
            filebrowserUploadRouteParameters:
                provider: sonata.media.provider.file
            # Upload file as image when sending a file from the image dialog
            filebrowserImageUploadRoute: admin_sonata_media_media_upload
            filebrowserImageUploadRouteParameters:
                provider: sonata.media.provider.image

jms_serializer:
    metadata:
        directories:
            - { path: "%kernel.root_dir%/../vendor/sonata-project/user-bundle/Resources/config/serializer/FOSUserBundle", namespace_prefix: 'FOS\UserBundle' }
